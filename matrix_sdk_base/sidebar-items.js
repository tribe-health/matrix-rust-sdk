window.SIDEBAR_ITEMS = {"enum":[["DisplayName","The name of the room, either from the metadata or calculated according to matrix specification"],["Error","Internal representation of errors."],["MinimalStateEvent","A minimal state event."],["RoomType","Enum keeping track in which state the room is, e.g. if our own user is joined, invited, or has left the room."]],"mod":[["deserialized_responses","SDK-specific variations of response types from Ruma."],["executor","Abstraction over an executor so we can spawn tasks under WASM the same way we do usually."],["instant",""],["locks",""],["media","Common types for media content."],["store","The state store holds the overall state for rooms, users and their profiles and their timelines. It is an overall cache for faster access and convenience- accessible through `Store`."],["sync","The SDK’s representation of the result of a `/sync` request."],["timeout",""]],"struct":[["BaseClient","A no IO Client implementation."],["OriginalMinimalStateEvent","An unredacted minimal state event."],["RedactedMinimalStateEvent","A redacted minimal state event."],["Room","The underlying room data structure collecting state for joined, left and invited rooms."],["RoomInfo","The underlying pure data structure for joined and left rooms."],["RoomMember","A member of a room."],["Session","A user session, containing an access token, an optional refresh token and information about the associated user account."],["SessionMeta","The immutable parts of the session: the user ID and device ID."],["SessionTokens","The mutable parts of the session: the access token and optional refresh token."]],"trait":[["AsyncTraitDeps","Super trait that is used for our store traits, this trait will differ if it’s used on WASM. WASM targets will not require `Send` and `Sync` to have implemented, while other targets will."],["SendOutsideWasm","Alias for `Send` on non-wasm, empty trait (implemented by everything) on wasm."],["SyncOutsideWasm","Alias for `Sync` on non-wasm, empty trait (implemented by everything) on wasm."]],"type":[["MinimalRoomMemberEvent","A minimal `m.room.member` event."],["Result","Result type of the rust-sdk."]]};